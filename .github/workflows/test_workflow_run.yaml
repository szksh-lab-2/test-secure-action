name: test (workflow_run)
on:
  workflow_run:
    workflows: ["test"]
    types:
      - completed
jobs:
  server:
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    permissions:
      issues: write
      pull-requests: write
    steps:
      - run: echo "$PAYLOAD"
        env:
          PAYLOAD: ${{ toJson(github.event) }}
      - uses: szksh-lab/secure-action@latest
        id: prepare
        with:
          action: server/prepare

      - uses: actions/github-script@v7
        id: validation
        env:
          OPS: ${{ steps.prepare.outputs.ops }}
        with:
          script: |
            const ops = JSON.parse(process.env.OPS);
            const result = {
              ops: [],
              valid: true,
              errors: [],
            };
            for (const op of ops) {
              if (op.handler !== 'octokit/rest.js') {
                result.valid = false;
                result.errors.push({
                  message: `Unsupported handler: ${op.handler}`,
                  op: op,
                });
                continue;
              }
              result.ops.push(op);
            }
            return result;

      - run: echo "$RESULT"
        env:
          RESULT: ${{ steps.validation.outputs.result }}

      - uses: szksh-lab/secure-action@latest
        if: toJson(fromJson(steps.validation.outputs.result).ops) != '[]'
        with:
          action: server/apply
          ops: ${{ toJson(fromJson(steps.validation.outputs.result).ops) }}
          github_token: ${{ github.token }}

      - if: (failure() || !fromJson(steps.validation.outputs.result).valid) && steps.prepare.outputs.pull_request_number != ''
        env:
          GH_TOKEN: ${{ github.token }}
          PR_NUMBER: ${{ steps.prepare.outputs.pull_request_number }}
          VALIDATION_RESULT: ${{ steps.validation.outputs.result }}
          COMMENT: |
            :x: [Workflow](${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}})
        run: |
          gh pr comment \
            -R "$GITHUB_REPOSITORY" \
            -b "${COMMENT}" \
            "$PR_NUMBER"

      - if: always()
        run: |
          tree || :
          ls
